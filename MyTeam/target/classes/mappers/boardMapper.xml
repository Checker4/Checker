<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">
	
	<sql id="search">
	 <if test="searchType != null">
		  <if test="searchType == 't'.toString()">WHERE board_title like '%' || #{keyword} || '%'</if>
		  <if test="searchType == 'c'.toString()">WHERE board_contents like '%' || #{keyword} || '%'</if>
		  <if test="searchType == 'w'.toString()">WHERE board_name like '%' || #{keyword} || '%'</if>
		  <if test="searchType == 'tc'.toString()">WHERE (board_title like '%' || #{keyword} || '%') or (board_contents like '%' || #{keyword} || '%')</if>
	 </if>
	</sql>
	
	<insert id="saveBoard" parameterType="java.util.HashMap">
	<!--#은 외부의 변수를 가져오기 위해서 사용  -->
	INSERT INTO BOARD
	(board_code, board_title, board_name, board_contents, board_create_date, board_count)VALUES
	(BOARD_CODE_BOARD.nextval, #{board_title}, #{board_name}, #{board_contents}, sysdate, 0)
	</insert>
	
	<select id="getBoardContent"
		resultType="com.mycompany.myapp.checker.dto.BoardDto">
		SELECT BOARD_CODE, BOARD_TITLE, board_contents, BOARD_NAME, TO_CHAR(board_create_date, 'YYYY-MM-DD HH24:MI:SS')
		AS board_create_date
		FROM BOARD
		WHERE board_code = #{board_code}
	</select>

	
	<update id="updateBoardSave" parameterType="java.util.HashMap">
		UPDATE BOARD
		SET 
		board_title = #{board_title},
		board_contents = #{board_contents}
		WHERE board_code = #{board_code}
	</update>
	
	<update id="updateBoardCount">
		update BOARD
		SET
		board_count = board_count+1
		WHERE board_code = #{board_code}
	</update>
	
	<delete id="deleteBoard">
		DELETE FROM BOARD where board_code = #{board_code} 
	</delete>
		
	<select id="listCount" resultType="int">
	<![CDATA[	
		SELECT count(board_code)
			FROM BOARD
				where board_code >0
	]]>
	</select>
	
	<select id="getBoardList"
		resultType="com.mycompany.myapp.checker.dto.BoardDto"
		parameterType="com.mycompany.myapp.checker.common.SearchCriteria" >
 	select board_code, board_title, board_name, board_contents, board_create_date, board_count
   		 from (
     	   select board_code, board_title, board_name, board_contents, board_create_date, board_count,
    	        row_number() over(order by board_code desc) as rNum
    	    from board
    	<include refid="search"></include>
  	      ) 
  	  where rNum between #{rowStart} and #{rowEnd}
   	     order by board_code desc
	</select>
	
	<select id="countSearch" resultType="int">
		select count(board_code)
			from board
	<![CDATA[
		where board_code > 0
	]]>
	<include refid="search"></include>
	</select>
	
</mapper>

